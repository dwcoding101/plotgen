"type"¦"qualified name"¦"description"
"procedure"¦"apoc.cypher.run"¦"apoc.cypher.run(fragment, params) yield value - executes reading fragment with the given parameters"
"procedure"¦"apoc.cypher.runFile"¦"apoc.cypher.runFile(file or url) - runs each statement in the file, all semicolon separated - currently no schema operations"
"procedure"¦"apoc.cypher.runMany"¦"apoc.cypher.runMany('cypher;\nstatements;',{params}) - runs each semicolon separated statement and returns summary - currently no schema operations"
"procedure"¦"apoc.cypher.parallel"¦""
"procedure"¦"apoc.cypher.mapParallel"¦"apoc.cypher.mapParallel(fragment, params, list-to-parallelize) yield value - executes fragment in parallel batches with the list segments being assigned to _"
"procedure"¦"apoc.cypher.mapParallel2"¦"apoc.cypher.mapParallel2(fragment, params, list-to-parallelize) yield value - executes fragment in parallel batches with the list segments being assigned to _"
"procedure"¦"apoc.cypher.parallel2"¦""
"procedure"¦"apoc.cypher.doIt"¦"apoc.cypher.doIt(fragment, params) yield value - executes writing fragment with the given parameters"
"procedure"¦"apoc.cypher.runTimeboxed"¦"apoc.cypher.runTimeboxed('cypherStatement',{params}, timeout) - abort statement after timeout ms if not finished"
