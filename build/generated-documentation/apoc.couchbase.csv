"type"¦"qualified name"¦"description"
"procedure"¦"apoc.couchbase.get"¦"apoc.couchbase.get(nodes, bucket, documentId) yield id, expiry, cas, mutationToken, content - retrieves a couchbase json document by its unique ID."
"procedure"¦"apoc.couchbase.exists"¦"apoc.couchbase.exists(nodes, bucket, documentId) yield value - check whether a couchbase json document with the given ID does exist."
"procedure"¦"apoc.couchbase.insert"¦"apoc.couchbase.insert(nodes, bucket, documentId, jsonDocument) yield id, expiry, cas, mutationToken, content - insert a couchbase json document with its unique ID."
"procedure"¦"apoc.couchbase.upsert"¦"apoc.couchbase.upsert(nodes, bucket, documentId, jsonDocument) yield id, expiry, cas, mutationToken, content - insert or overwrite a couchbase json document with its unique ID."
"procedure"¦"apoc.couchbase.append"¦"apoc.couchbase.append(nodes, bucket, documentId, jsonDocument) yield id, expiry, cas, mutationToken, content - append a couchbase json document to an existing one."
"procedure"¦"apoc.couchbase.prepend"¦"apoc.couchbase.prepend(nodes, bucket, documentId, jsonDocument) yield id, expiry, cas, mutationToken, content - prepend a couchbase json document to an existing one."
"procedure"¦"apoc.couchbase.remove"¦"apoc.couchbase.remove(nodes, bucket, documentId) yield id, expiry, cas, mutationToken, content - remove the couchbase json document identified by its unique ID."
"procedure"¦"apoc.couchbase.replace"¦"apoc.couchbase.replace(nodes, bucket, documentId, jsonDocument) yield id, expiry, cas, mutationToken, content - replace the content of the couchbase json document identified by its unique ID."
"procedure"¦"apoc.couchbase.query"¦"apoc.couchbase.query(nodes, bucket, statement) yield queryResult - executes a plain un-parameterized N1QL statement."
"procedure"¦"apoc.couchbase.posParamsQuery"¦"apoc.couchbase.posParamsQuery(nodes, bucket, statement, params) yield queryResult - executes a N1QL statement with positional parameters."
"procedure"¦"apoc.couchbase.namedParamsQuery"¦"apoc.couchbase.namedParamsQuery(nodes, bucket, statement, paramNames, paramValues) yield queryResult - executes a N1QL statement with named parameters."
