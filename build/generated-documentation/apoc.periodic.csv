"type"¦"qualified name"¦"description"
"procedure"¦"apoc.periodic.list"¦"apoc.periodic.list - list all jobs"
"procedure"¦"apoc.periodic.commit"¦"apoc.periodic.commit(statement,params) - runs the given statement in separate transactions until it returns 0"
"procedure"¦"apoc.periodic.cancel"¦"apoc.periodic.cancel(name) - cancel job with the given name"
"procedure"¦"apoc.periodic.submit"¦"apoc.periodic.submit('name',statement) - submit a one-off background statement"
"procedure"¦"apoc.periodic.repeat"¦"apoc.periodic.repeat('name',statement,repeat-rate-in-seconds) submit a repeatedly-called background statement"
"procedure"¦"apoc.periodic.rock_n_roll_while"¦"apoc.periodic.rock_n_roll_while('some cypher for knowing when to stop', 'some cypher for iteration', 'some cypher as action on each iteration', 10000) YIELD batches, total - run the action statement in batches over the iterator statement's results in a separate thread. Returns number of batches and total processed rows"
"procedure"¦"apoc.periodic.iterate"¦"apoc.periodic.iterate('statement returning items', 'statement per item', {batchSize:1000,iterateList:false,parallel:true}) YIELD batches, total - run the second statement for each item returned by the first statement. Returns number of batches and total processed rows"
"procedure"¦"apoc.periodic.rock_n_roll"¦"apoc.periodic.rock_n_roll('some cypher for iteration', 'some cypher as action on each iteration', 10000) YIELD batches, total - run the action statement in batches over the iterator statement's results in a separate thread. Returns number of batches and total processed rows"
